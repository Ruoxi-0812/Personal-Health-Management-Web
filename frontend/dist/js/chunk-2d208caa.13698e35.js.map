{"version":3,"sources":["webpack:///./src/views/admin/MessageManage.vue","webpack:///src/views/admin/MessageManage.vue","webpack:///./src/views/admin/MessageManage.vue?b9de","webpack:///./src/views/admin/MessageManage.vue?dd8f"],"names":["render","_vm","this","_c","_self","staticStyle","attrs","model","value","searchTime","callback","$$v","expression","on","handleFilterClear","messageQueryDto","content","$set","handleFilter","slot","staticClass","allMessagePush","_v","tableData","scopedSlots","_u","key","fn","scope","_s","row","isRead","messageType","$event","handleDelete","currentPage","pageSize","totalItems","handleSizeChange","handleCurrentChange","dialogMessageOperation","minRows","maxRows","messageContent","messagePushOperation","staticRenderFns","data","filterText","selectedRows","messsageContent","messageTypeList","created","fetchFreshData","loadAllMessageType","methods","message","$axios","post","then","response","code","$notify","duration","title","type","get","length","$message","confirmed","$swalConfirm","text","icon","ids","map","entity","id","$swal","fire","msg","showConfirmButton","timer","e","console","error","resetQueryCondition","startTime","endTime","startDate","endDate","Promise","all","date","toISOString","split","params","current","size","total","add","dialogUserOperaion","val","handleEdit","isOperation","push","batchDelete","component"],"mappings":"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","file":"js/chunk-2d208caa.13698e35.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('el-row',{staticStyle:{\"background-color\":\"#FFFFFF\",\"padding\":\"10px 0\",\"border-radius\":\"5px\"}},[_c('el-row',{staticStyle:{\"padding\":\"10px\",\"margin-left\":\"5px\"}},[_c('el-row',[_c('el-date-picker',{staticStyle:{\"margin-left\":\"10px\",\"width\":\"220px\"},attrs:{\"size\":\"small\",\"type\":\"daterange\",\"range-separator\":\"to\",\"start-placeholder\":\"Message Start\",\"end-placeholder\":\"Message End\"},model:{value:(_vm.searchTime),callback:function ($$v) {_vm.searchTime=$$v},expression:\"searchTime\"}}),_c('el-input',{staticStyle:{\"width\":\"188px\",\"margin-left\":\"5px\",\"margin-right\":\"6px\"},attrs:{\"size\":\"small\",\"placeholder\":\"Message Content\",\"clearable\":\"\"},on:{\"clear\":_vm.handleFilterClear},model:{value:(_vm.messageQueryDto.content),callback:function ($$v) {_vm.$set(_vm.messageQueryDto, \"content\", $$v)},expression:\"messageQueryDto.content\"}},[_c('el-button',{attrs:{\"slot\":\"append\",\"icon\":\"el-icon-search\"},on:{\"click\":_vm.handleFilter},slot:\"append\"})],1),_c('span',{staticStyle:{\"float\":\"right\"}},[_c('el-button',{staticClass:\"customer\",staticStyle:{\"background-color\":\"rgb(96, 98, 102)\",\"color\":\"rgb(247,248,249)\",\"border\":\"none\"},attrs:{\"size\":\"small\",\"type\":\"info\"},on:{\"click\":_vm.allMessagePush}},[_c('i',{staticClass:\"el-icon-plus\"}),_vm._v(\"Targeted Push\")])],1)],1)],1),_c('el-row',{staticStyle:{\"margin\":\"0 20px\",\"border-top\":\"1px solid rgb(245,245,245)\"}},[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData}},[_c('el-table-column',{attrs:{\"prop\":\"name\",\"width\":\"98\",\"label\":\"Read Status\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',[_vm._v(_vm._s(scope.row.isRead ? 'Read' : 'Unread'))])]}}])}),_c('el-table-column',{attrs:{\"prop\":\"messageType\",\"width\":\"148\",\"label\":\"Message Type\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.messageType === 1)?_c('span',[_vm._v(\"Comment Reply\")]):(scope.row.messageType === 2)?_c('span',[_vm._v(\"Comment Like\")]):(scope.row.messageType === 3)?_c('span',[_vm._v(\"Metric Reminder\")]):_c('span',[_vm._v(\"System Notification\")])]}}])}),_c('el-table-column',{attrs:{\"prop\":\"receiverName\",\"width\":\"108\",\"label\":\"Receiver\"}}),_c('el-table-column',{attrs:{\"prop\":\"content\",\"label\":\"Message Body\"}}),_c('el-table-column',{attrs:{\"prop\":\"createTime\",\"width\":\"168\",\"label\":\"Sent Time\"}}),_c('el-table-column',{attrs:{\"label\":\"Actions\",\"width\":\"88\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{staticClass:\"text-button\",on:{\"click\":function($event){return _vm.handleDelete(scope.row)}}},[_vm._v(\"Delete\")])]}}])})],1),_c('el-pagination',{staticStyle:{\"margin\":\"20px 0\"},attrs:{\"current-page\":_vm.currentPage,\"page-sizes\":[10, 20],\"page-size\":_vm.pageSize,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.totalItems},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}})],1),_c('el-dialog',{attrs:{\"show-title\":false,\"show-close\":false,\"visible\":_vm.dialogMessageOperation,\"width\":\"24%\"},on:{\"update:visible\":function($event){_vm.dialogMessageOperation=$event}}},[_c('p',{staticStyle:{\"padding\":\"20px 0  0 20px\"}},[_vm._v(\"Message Push\")]),_c('div',{staticStyle:{\"padding\":\"0 20px\"}},[_c('el-row',[_c('span',{staticClass:\"dialog-hover\"},[_vm._v(\"Message Content\")]),_c('el-input',{attrs:{\"type\":\"textarea\",\"autosize\":{ minRows: 2, maxRows: 4 },\"placeholder\":\"Message Content\"},model:{value:(_vm.messageContent),callback:function ($$v) {_vm.messageContent=$$v},expression:\"messageContent\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{staticClass:\"customer\",staticStyle:{\"background-color\":\"rgb(43, 121, 203)\",\"border\":\"none\"},attrs:{\"size\":\"small\",\"type\":\"info\"},on:{\"click\":_vm.messagePushOperation}},[_vm._v(\"Confirm Push\")]),_c('el-button',{staticClass:\"customer\",staticStyle:{\"background-color\":\"rgb(241, 241, 241)\",\"border\":\"none\"},attrs:{\"size\":\"small\"},on:{\"click\":function($event){_vm.dialogMessageOperation = false}}},[_vm._v(\"Cancel\")])],1)])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <el-row style=\"background-color: #FFFFFF;padding: 10px 0;border-radius: 5px;\">\r\n        <el-row style=\"padding: 10px;margin-left: 5px;\">\r\n            <el-row>\r\n                <el-date-picker size=\"small\" style=\"margin-left: 10px;width: 220px;\" v-model=\"searchTime\"\r\n                    type=\"daterange\" range-separator=\"to\" start-placeholder=\"Message Start\" end-placeholder=\"Message End\">\r\n                </el-date-picker>\r\n                <el-input size=\"small\" style=\"width: 188px;margin-left: 5px;margin-right: 6px;\"\r\n                    v-model=\"messageQueryDto.content\" placeholder=\"Message Content\" clearable @clear=\"handleFilterClear\">\r\n                    <el-button slot=\"append\" @click=\"handleFilter\" icon=\"el-icon-search\"></el-button>\r\n                </el-input>\r\n                <span style=\"float: right;\">\r\n                    <el-button size=\"small\"\r\n                        style=\"background-color: rgb(96, 98, 102);color: rgb(247,248,249);border: none;\"\r\n                        class=\"customer\" type=\"info\" @click=\"allMessagePush\"><i\r\n                            class=\"el-icon-plus\"></i>Targeted Push</el-button>\r\n                </span>\r\n            </el-row>\r\n        </el-row>\r\n        <el-row style=\"margin: 0 20px;border-top: 1px solid rgb(245,245,245);\">\r\n            <el-table :data=\"tableData\" style=\"width: 100%\">\r\n                <el-table-column prop=\"name\" width=\"98\" label=\"Read Status\">\r\n                    <template slot-scope=\"scope\">\r\n                        <span>{{ scope.row.isRead ? 'Read' : 'Unread' }}</span>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column prop=\"messageType\" width=\"148\" label=\"Message Type\">\r\n                    <template slot-scope=\"scope\">\r\n                        <span v-if=\"scope.row.messageType === 1\">Comment Reply</span>\r\n                        <span v-else-if=\"scope.row.messageType === 2\">Comment Like</span>\r\n                        <span v-else-if=\"scope.row.messageType === 3\">Metric Reminder</span>\r\n                        <span v-else>System Notification</span>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column prop=\"receiverName\" width=\"108\" label=\"Receiver\"></el-table-column>\r\n                <el-table-column prop=\"content\" label=\"Message Body\"></el-table-column>\r\n                <el-table-column prop=\"createTime\" width=\"168\" label=\"Sent Time\"></el-table-column>\r\n                <el-table-column label=\"Actions\" width=\"88\">\r\n                    <template slot-scope=\"scope\">\r\n                        <span class=\"text-button\" @click=\"handleDelete(scope.row)\">Delete</span>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n            <el-pagination style=\"margin: 20px 0;\" @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\"\r\n                :current-page=\"currentPage\" :page-sizes=\"[10, 20]\" :page-size=\"pageSize\"\r\n                layout=\"total, sizes, prev, pager, next, jumper\" :total=\"totalItems\"></el-pagination>\r\n        </el-row>\r\n        <!-- System-wide Message Push -->\r\n        <el-dialog :show-title=\"false\" :show-close=\"false\" :visible.sync=\"dialogMessageOperation\" width=\"24%\">\r\n            <p style=\"padding: 20px 0  0 20px;\">Message Push</p>\r\n            <div style=\"padding:0 20px;\">\r\n                <el-row>\r\n                    <span class=\"dialog-hover\">Message Content</span>\r\n                    <el-input type=\"textarea\" :autosize=\"{ minRows: 2, maxRows: 4 }\" placeholder=\"Message Content\"\r\n                        v-model=\"messageContent\">\r\n                    </el-input>\r\n                </el-row>\r\n            </div>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button size=\"small\" style=\"background-color: rgb(43, 121, 203);border: none;\" class=\"customer\"\r\n                    type=\"info\" @click=\"messagePushOperation\">Confirm Push</el-button>\r\n                <el-button class=\"customer\" size=\"small\" style=\"background-color: rgb(241, 241, 241);border: none;\"\r\n                    @click=\"dialogMessageOperation = false\">Cancel</el-button>\r\n            </span>\r\n        </el-dialog>\r\n    </el-row>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            data: {},\r\n            filterText: '',\r\n            currentPage: 1,\r\n            pageSize: 10,\r\n            totalItems: 0,\r\n            tableData: [],\r\n            searchTime: [],\r\n            selectedRows: [],\r\n            messageQueryDto: {}, // Search conditions\r\n            messsageContent: '',\r\n            messageTypeList: [],\r\n            dialogMessageOperation: false, // Toggle variable for message dialog display\r\n            messageContent: ''\r\n        };\r\n    },\r\n    created() {\r\n        this.fetchFreshData();\r\n        this.loadAllMessageType();\r\n    },\r\n    methods: {\r\n        messagePushOperation() {\r\n            const message = {\r\n                content: this.messageContent\r\n            }\r\n            this.$axios.post('/message/systemInfoUsersSave', message).then(response => {\r\n                const { data } = response;\r\n                if (data.code === 200) {\r\n                    this.$notify({\r\n                        duration: 2000,\r\n                        title: 'Push Operation',\r\n                        message: 'Success',\r\n                        type: 'success'\r\n                    });\r\n                    this.dialogMessageOperation = false;\r\n                    this.messageContent = '';\r\n                }\r\n            })\r\n        },\r\n        allMessagePush() {\r\n            this.dialogMessageOperation = true;\r\n        },\r\n        loadAllMessageType() {\r\n            this.$axios.get('/message/types').then(response => {\r\n                const { data } = response;\r\n                if (data.code === 200) {\r\n                    this.messageTypeList = data.data;\r\n                }\r\n            })\r\n        },\r\n        // Batch delete data\r\n        async batchDelete() {\r\n            if (!this.selectedRows.length) {\r\n                this.$message(`No data selected`);\r\n                return;\r\n            }\r\n            const confirmed = await this.$swalConfirm({\r\n                title: 'Delete Message Data',\r\n                text: `This action cannot be undone. Do you want to proceed?`,\r\n                icon: 'warning',\r\n            });\r\n            if (confirmed) {\r\n                try {\r\n                    let ids = this.selectedRows.map(entity => entity.id);\r\n                    const response = await this.$axios.post(`/message/batchDelete`, ids);\r\n                    if (response.data.code === 200) {\r\n                        this.$swal.fire({\r\n                            title: 'Delete Notification',\r\n                            text: response.data.msg,\r\n                            icon: 'success',\r\n                            showConfirmButton: false,\r\n                            timer: 2000,\r\n                        });\r\n                        this.fetchFreshData();\r\n                        return;\r\n                    }\r\n                } catch (e) {\r\n                    console.error(`Error deleting message information:`, e);\r\n                }\r\n            }\r\n        },\r\n        resetQueryCondition() {\r\n            this.messageQueryDto = {};\r\n            this.searchTime = [];\r\n            this.fetchFreshData();\r\n        },\r\n        async fetchFreshData() {\r\n            try {\r\n                let startTime = null;\r\n                let endTime = null;\r\n                if (this.searchTime != null && this.searchTime.length === 2) {\r\n                    const [startDate, endDate] = await Promise.all(this.searchTime.map(date => date.toISOString()));\r\n                    startTime = `${startDate.split('T')[0]}T00:00:00`;\r\n                    endTime = `${endDate.split('T')[0]}T23:59:59`;\r\n                }\r\n                // Request parameters\r\n                const params = {\r\n                    current: this.currentPage,\r\n                    size: this.pageSize,\r\n                    startTime: startTime,\r\n                    endTime: endTime,\r\n                    ...this.messageQueryDto\r\n                };\r\n                const response = await this.$axios.post('/message/query', params);\r\n                const { data } = response;\r\n                this.tableData = data.data;\r\n                this.totalItems = data.total;\r\n            } catch (error) {\r\n                console.error('Error fetching message data:', error);\r\n            }\r\n        },\r\n        add() {\r\n            this.dialogUserOperaion = true;\r\n        },\r\n        handleFilter() {\r\n            this.currentPage = 1;\r\n            this.fetchFreshData();\r\n        },\r\n        handleFilterClear() {\r\n            this.filterText = '';\r\n            this.handleFilter();\r\n        },\r\n        handleSizeChange(val) {\r\n            this.pageSize = val;\r\n            this.currentPage = 1;\r\n            this.fetchFreshData();\r\n        },\r\n        handleCurrentChange(val) {\r\n            this.currentPage = val;\r\n            this.fetchFreshData();\r\n        },\r\n        handleEdit(row) {\r\n            this.dialogUserOperaion = true;\r\n            this.isOperation = true;\r\n            this.data = { ...row }\r\n        },\r\n        handleDelete(row) {\r\n            this.selectedRows.push(row);\r\n            this.batchDelete();\r\n        }\r\n    },\r\n};\r\n</script>\r\n<style scoped lang=\"scss\"></style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MessageManage.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MessageManage.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./MessageManage.vue?vue&type=template&id=291a1dde&scoped=true\"\nimport script from \"./MessageManage.vue?vue&type=script&lang=js\"\nexport * from \"./MessageManage.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"291a1dde\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}